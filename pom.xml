<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sum</groupId>
    <artifactId>ldapauthentication</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>ldapauthentication</name>
    <description>Ldap Authentication Service for Ingress Service</description>
    <properties>
        <java.version>17</java.version>
        <!--set this to your docker acct name-->
        <docker.image.prefix>skmaji1</docker.image.prefix>

        <!--Set to name of project-->
        <docker.image.name>springbootdocker</docker.image.name>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>spring-react-dev-run</id>
            <build>
                <plugins>
                    <!-- docker run -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.20.0</version>
                        <configuration>
                            <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>

                            <verbose>true</verbose>
                            <images>
                                <!-- reacjs -->
                                <image>
                                    <name>${docker.image.prefix}/react</name>
                                    <alias>reactapp</alias>
                                    <run>
                                        <ports>
                                            <port>3000:3000</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>/app/node_modules</volume>
                                                <volume>${basedir}/frontend:/app</volume>
                                            </bind>
                                        </volumes>
                                        <links>
                                            <link>myspring:myspring</link>
                                        </links>
                                    </run>
                                </image>

                                <!-- spring -->
                                <image>
                                    <name>${docker.image.prefix}/spring</name>
                                    <alias>myspring</alias>
                                    <run>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>react-dev-image</id>
            <build>
                <plugins>

                    <!-- create a docker image -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.20.0</version>
                        <configuration>
                            <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>

                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>${docker.image.prefix}/react</name>
                                    <alias>reactapp</alias>
                                    <build>

                                        <!-- This is the same FROM used in a Dockerfile -->
                                        <from>node:14-alpine</from>

                                        <workdir>/app</workdir>

                                        <assembly>
                                            <mode>dir</mode>
                                            <targetDir>/app</targetDir>
                                            <descriptor>assembly/assembly.xml</descriptor>
                                        </assembly>

                                        <runCmds>
                                            <run>npm install</run>
                                        </runCmds>

                                        <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                                        <entryPoint>
                                            <exec>
                                                <arg>npm</arg>
                                                <arg>run</arg>
                                                <arg>start</arg>
                                            </exec>
                                        </entryPoint>

                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${project.version}</tag>
                                        </tags>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>3000:3000</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>/app/node_modules</volume>
                                                <volume>${basedir}/frontend:/app</volume>
                                            </bind>
                                        </volumes>
                                        <links>
                                            <link>myspring:myspring</link>
                                        </links>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>npmbuild</id>
            <build>
                <plugins>
                    <!-- npm install and build -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.12.1</version>
                        <configuration>
                            <workingDirectory>frontend</workingDirectory>
                            <installDirectory>target</installDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v18.4.0</nodeVersion>
                                    <npmVersion>8.12.1</npmVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm run build</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- copy npm build artifacts to target/classes/public directory -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <copy todir="${project.build.directory}/classes/public">
                                            <fileset dir="${project.basedir}/frontend/build"/>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>devtool</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                </exclude>
                            </excludes>
                            <excludeDevtools>false</excludeDevtools>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spring-image</id>
            <build>
                <plugins>
                    <!-- create a docker image -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.20.0</version>
                        <configuration>
                            <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->
                            <dockerHost>unix:///var/run/docker.sock</dockerHost>

                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>${docker.image.prefix}/spring</name>
                                    <alias>myspring</alias>
                                    <build>
                                        <!-- This is the same FROM used in a Dockerfile -->
                                        <from>openjdk</from>

                                        <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                                        <entryPoint>
                                            <exec>
                                                <arg>java</arg>
                                                <!-- This extra argument is so Tomcat can start faster due to lack of entropy -->
                                                <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                                <arg>-jar</arg>
                                                <!-- /maven/ is the default dir that the plugin copies your artifact to -->
                                                <arg>/maven/${project.artifactId}-${project.version}.${project.packaging}</arg>
                                            </exec>
                                        </entryPoint>

                                        <!--dockerFileDir>${project.basedir}/docker/</dockerFileDir-->
                                        <!--copies artficact to docker build dir in target-->
                                        <assembly>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${project.version}</tag>
                                        </tags>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

</project>